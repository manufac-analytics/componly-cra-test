name: Componly

on:
  push:
    branches:
      - debug

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 18
          
    - name: Install dependencies
      id: install-dependencies
      run: |
        echo  -e "\n@componly:registry=https://npm.pkg.github.com/" >> .npmrc
        echo //npm.pkg.github.com/:_authToken=${{secrets.COMPONLY_NPM_AUTH_TOKEN}} >> .npmrc
        yarn install 

    - name: scan
      id: componly-scan
      run: yarn scan 

    - name: Post scan.json
      id: post-scan
      uses: actions/github-script@v6.4.1
      with:
        script: |
          const FormData = require("form-data");
          const { createReadStream } = require("fs");
          const axios = require("axios");

          const instance = axios.create({
            baseURL: "https://backend-production-e808.up.railway.app",
            headers: {
              "Content-Type": "application/json",
            },
          });

          async function postScan() {
            const userInfoResponse = await instance.post("/auth/login", {
              email: "${{secrets.COMPONLY_USERNAME}}",
              password: "${{secrets.COMPONLY_PASSWORD}}",
            });

            const userInfo = userInfoResponse.data.response;

            const projectInfoResponse = await instance.get(
              "/companies/projects?page=1&pageSize=1&with-cli=true&with-sourceCodes=true",
              {
                headers: {
                  Authorization: `Bearer ${userInfo.token}`,
                },
              }
            );

            const projectInfo = projectInfoResponse.data;
            const project = projectInfo.projects[0];
            const { id: cliId, password } = project.cli;
            const [sourceCode] = project.sourceCodes;

            const projectLoginResponse = await instance.post("/auth/login/cli", {
              cliId,
              password,
            });

            const token = projectLoginResponse.data.token;

            const formData = new FormData();
            const fileStream = createReadStream("./.componly/scan.json");
            formData.append("file", fileStream);

            const response = await instance.post(
              `/scans/upload/${sourceCode.id}`,
              formData,
              {
                headers: {
                  Authorization: `Bearer ${token}`,
                  ...formData.getHeaders(),
                },
              }
            );

            console.log(response.status);
          }

          postScan().catch(console.log);
